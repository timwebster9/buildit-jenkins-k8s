kind: Service
apiVersion: v1
metadata:
  name: jenkins-lb
  namespace: default
  labels:
    app: jenkins-lb
spec:
  externalTrafficPolicy: Local
  type: LoadBalancer
  selector:
    app: jenkins
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: tcp
    port: 5000
    targetPort: 5000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: buildit-jenkins-config
data:
  JENKINS_CONFIG_FILE: https://github.com/timwebster9/jenkins-config.git
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: buildit-jenkins
spec:
  selector:
    matchLabels:
      app: jenkins
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - image: builditdigital/jenkins-image:2.2.0-alpine
        name: jenkins
        env:
        - name: JENKINS_CONFIG_FILE
          valueFrom:
            configMapKeyRef:
              name: buildit-jenkins-config
              key: JENKINS_CONFIG_FILE
        # Secret created manually: https://kubernetes.io/docs/concepts/configuration/secret/#creating-your-own-secrets
        - name: JENKINS_STARTUP_SECRET
          valueFrom:
            secretKeyRef:
              name: jenkins-startup-secret
              key: JENKINS_STARTUP_SECRET
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 5000
          name: tcp
---
# Follow this to install nginx ingress controller: https://github.com/nginxinc/kubernetes-ingress/blob/master/docs/installation.md
# I would recommend a daemon-set, which will run nginx on all nodes and expose ports 80/443 on them
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: buildit-jenkins-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  # Your DNS has to be able to resolve this hostname
  - host: buildit-jenkins
    http:
      paths:
      - backend: 
          serviceName: buildit-jenkins
          servicePort: 80
